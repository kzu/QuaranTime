### YamlMime:ManagedReference
items:
- uid: System.QuaranTime
  commentId: T:System.QuaranTime
  id: QuaranTime
  parent: System
  children:
  - System.QuaranTime.Epoch
  - System.QuaranTime.FromQuaranTimeMilliseconds(System.Int64)
  - System.QuaranTime.FromQuaranTimeSeconds(System.Int64)
  - System.QuaranTime.ToQuaranTimeMilliseconds(System.DateTimeOffset)
  - System.QuaranTime.ToQuaranTimeSeconds(System.DateTimeOffset)
  langs:
  - csharp
  - vb
  name: QuaranTime
  nameWithType: QuaranTime
  fullName: System.QuaranTime
  type: Class
  source:
    remote:
      path: src/QuaranTime/QuaranTime.cs
      branch: main
      repo: https://github.com/kzu/Quarantime
    id: QuaranTime
    path: src/QuaranTime/QuaranTime.cs
    startLine: 7
  assemblies:
  - QuaranTime
  namespace: System
  summary: "\nProvides the <xref href=\"System.QuaranTime.Epoch\" data-throw-if-not-resolved=\"false\"></xref> constant that signaled the \nstart of the Quarantime time and methods to convert to and from \nQuarantine-relative values.\n"
  example: []
  syntax:
    content: public static class QuaranTime
    content.vb: Public Module QuaranTime
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.QuaranTime.Epoch
  commentId: P:System.QuaranTime.Epoch
  id: Epoch
  parent: System.QuaranTime
  langs:
  - csharp
  - vb
  name: Epoch
  nameWithType: QuaranTime.Epoch
  fullName: System.QuaranTime.Epoch
  type: Property
  source:
    remote:
      path: src/QuaranTime/QuaranTime.cs
      branch: main
      repo: https://github.com/kzu/Quarantime
    id: Epoch
    path: src/QuaranTime/QuaranTime.cs
    startLine: 24
  assemblies:
  - QuaranTime
  namespace: System
  summary: "\nThe value of this constant is equivalent to 00:00:00 GMT-0300, March 3, 2020, in the Gregorian calendar. \n<xref href=\"System.QuaranTime.Epoch\" data-throw-if-not-resolved=\"false\"></xref> defines the point in time when the quarantine started in Argentina.\n"
  example: []
  syntax:
    content: public static DateTimeOffset Epoch { get; }
    parameters: []
    return:
      type: System.DateTimeOffset
    content.vb: Public Shared ReadOnly Property Epoch As DateTimeOffset
  overload: System.QuaranTime.Epoch*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.QuaranTime.FromQuaranTimeSeconds(System.Int64)
  commentId: M:System.QuaranTime.FromQuaranTimeSeconds(System.Int64)
  id: FromQuaranTimeSeconds(System.Int64)
  parent: System.QuaranTime
  langs:
  - csharp
  - vb
  name: FromQuaranTimeSeconds(Int64)
  nameWithType: QuaranTime.FromQuaranTimeSeconds(Int64)
  fullName: System.QuaranTime.FromQuaranTimeSeconds(System.Int64)
  type: Method
  source:
    remote:
      path: src/QuaranTime/QuaranTime.cs
      branch: main
      repo: https://github.com/kzu/Quarantime
    id: FromQuaranTimeSeconds
    path: src/QuaranTime/QuaranTime.cs
    startLine: 47
  assemblies:
  - QuaranTime
  namespace: System
  summary: "\nConverts a Quarantine time expressed as the number of seconds that have elapsed since \nsince 2020-03-20T00:00:00-03:00 to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value.\n"
  remarks: "\nThe <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property value of the returned <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> \ninstance is <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref>, which represents Coordinated Universal Time. \nYou can convert it to the time in a specific time zone by calling the \n<xref href=\"System.TimeZoneInfo.ConvertTime(System.DateTimeOffset%2cSystem.TimeZoneInfo)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static DateTimeOffset FromQuaranTimeSeconds(long seconds)
    parameters:
    - id: seconds
      type: System.Int64
      description: "\nA Quarantine time, expressed as the number of seconds that have elapsed since \n2020-03-20T00:00:00-03:00 (March 3, 2020, at 12:00 AM GMT-0300). For Quarantine times \nbefore this date, its value is negative.\n"
    return:
      type: System.DateTimeOffset
      description: "\nA date and time value that represents the same moment in time as the Quarantine time.\n"
    content.vb: Public Shared Function FromQuaranTimeSeconds(seconds As Long) As DateTimeOffset
  overload: System.QuaranTime.FromQuaranTimeSeconds*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">seconds</code> seconds is less than -63,720,270,000 or greater than 251,817,627,599.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.QuaranTime.FromQuaranTimeMilliseconds(System.Int64)
  commentId: M:System.QuaranTime.FromQuaranTimeMilliseconds(System.Int64)
  id: FromQuaranTimeMilliseconds(System.Int64)
  parent: System.QuaranTime
  langs:
  - csharp
  - vb
  name: FromQuaranTimeMilliseconds(Int64)
  nameWithType: QuaranTime.FromQuaranTimeMilliseconds(Int64)
  fullName: System.QuaranTime.FromQuaranTimeMilliseconds(System.Int64)
  type: Method
  source:
    remote:
      path: src/QuaranTime/QuaranTime.cs
      branch: main
      repo: https://github.com/kzu/Quarantime
    id: FromQuaranTimeMilliseconds
    path: src/QuaranTime/QuaranTime.cs
    startLine: 79
  assemblies:
  - QuaranTime
  namespace: System
  summary: "\nConverts a Quarantine time expressed as the number of milliseconds that have elapsed \nsince 2020-03-20T00:00:00-03:00 to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value.\n"
  remarks: "\nThe <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property value of the returned <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> \ninstance is <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref>, which represents Coordinated Universal Time. \nYou can convert it to the time in a specific time zone by calling the \n<xref href=\"System.TimeZoneInfo.ConvertTime(System.DateTimeOffset%2cSystem.TimeZoneInfo)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static DateTimeOffset FromQuaranTimeMilliseconds(long milliseconds)
    parameters:
    - id: milliseconds
      type: System.Int64
      description: "\nA Quarantine time, expressed as the number of milliseconds that have elapsed since \n2020-03-20T00:00:00-03:00 (March 3, 2020, at 12:00 AM GMT-0300). For Quarantine times \nbefore this date, its value is negative.\n"
    return:
      type: System.DateTimeOffset
      description: "\nA date and time value that represents the same moment in time as the Quarantine time.\n"
    content.vb: Public Shared Function FromQuaranTimeMilliseconds(milliseconds As Long) As DateTimeOffset
  overload: System.QuaranTime.FromQuaranTimeMilliseconds*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">milliseconds</code> seconds is less than -63,720,270,000,000 or greater than 251,817,627,599,999.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.QuaranTime.ToQuaranTimeSeconds(System.DateTimeOffset)
  commentId: M:System.QuaranTime.ToQuaranTimeSeconds(System.DateTimeOffset)
  id: ToQuaranTimeSeconds(System.DateTimeOffset)
  isExtensionMethod: true
  parent: System.QuaranTime
  langs:
  - csharp
  - vb
  name: ToQuaranTimeSeconds(DateTimeOffset)
  nameWithType: QuaranTime.ToQuaranTimeSeconds(DateTimeOffset)
  fullName: System.QuaranTime.ToQuaranTimeSeconds(System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/QuaranTime/QuaranTime.cs
      branch: main
      repo: https://github.com/kzu/Quarantime
    id: ToQuaranTimeSeconds
    path: src/QuaranTime/QuaranTime.cs
    startLine: 106
  assemblies:
  - QuaranTime
  namespace: System
  summary: "\nReturns the number of seconds that have elapsed since 2020-03-20T00:00:00-03:00.\n"
  remarks: "\nQuarantine time represents the number of seconds that have elapsed since 2020-03-20T00:00:00-03:00 \n(March 3, 2020, at 12:00 AM GMT-0300). It does not take leap seconds into account. This method \nreturns the number of seconds in Quarantine time.\n<p>\nThis method first converts the current instance to UTC before returning its Quarantine time. \nFor date and time values before 2020-03-20T00:00:00-03:00, this method returns a negative value.\n</p>\n"
  example: []
  syntax:
    content: public static long ToQuaranTimeSeconds(this DateTimeOffset dateTime)
    parameters:
    - id: dateTime
      type: System.DateTimeOffset
    return:
      type: System.Int64
      description: The number of seconds that have elapsed since 2020-03-20T00:00:00-03:00.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToQuaranTimeSeconds(dateTime As DateTimeOffset) As Long
  overload: System.QuaranTime.ToQuaranTimeSeconds*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.QuaranTime.ToQuaranTimeMilliseconds(System.DateTimeOffset)
  commentId: M:System.QuaranTime.ToQuaranTimeMilliseconds(System.DateTimeOffset)
  id: ToQuaranTimeMilliseconds(System.DateTimeOffset)
  isExtensionMethod: true
  parent: System.QuaranTime
  langs:
  - csharp
  - vb
  name: ToQuaranTimeMilliseconds(DateTimeOffset)
  nameWithType: QuaranTime.ToQuaranTimeMilliseconds(DateTimeOffset)
  fullName: System.QuaranTime.ToQuaranTimeMilliseconds(System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/QuaranTime/QuaranTime.cs
      branch: main
      repo: https://github.com/kzu/Quarantime
    id: ToQuaranTimeMilliseconds
    path: src/QuaranTime/QuaranTime.cs
    startLine: 128
  assemblies:
  - QuaranTime
  namespace: System
  summary: "\nReturns the number of milliseconds that have elapsed since 2020-03-20T00:00:00-03:00.\n"
  remarks: "\nQuarantine time represents the number of seconds that have elapsed since 2020-03-20T00:00:00-03:00 \n(March 3, 2020, at 12:00 AM GMT-0300). It does not take leap seconds into account. This method \nreturns the number of milliseconds in Quarantine time.\n<p>\nThis method first converts the current instance to UTC before returning the number of milliseconds \nin its Quarantine time. For date and time values before 2020-03-20T00:00:00-03:00, this method returns \na negative value.\n</p>\n"
  example: []
  syntax:
    content: public static long ToQuaranTimeMilliseconds(this DateTimeOffset dateTime)
    parameters:
    - id: dateTime
      type: System.DateTimeOffset
    return:
      type: System.Int64
      description: The number of miliseconds that have elapsed since 2020-03-20T00:00:00-03:00.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToQuaranTimeMilliseconds(dateTime As DateTimeOffset) As Long
  overload: System.QuaranTime.ToQuaranTimeMilliseconds*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.QuaranTime.Epoch
  commentId: P:System.QuaranTime.Epoch
  isExternal: true
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.QuaranTime.Epoch*
  commentId: Overload:System.QuaranTime.Epoch
  name: Epoch
  nameWithType: QuaranTime.Epoch
  fullName: System.QuaranTime.Epoch
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.DateTimeOffset.Offset
  commentId: P:System.DateTimeOffset.Offset
  isExternal: true
- uid: System.TimeSpan.Zero
  commentId: F:System.TimeSpan.Zero
  isExternal: true
- uid: System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)
  commentId: M:System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)
  isExternal: true
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: System.QuaranTime.FromQuaranTimeSeconds*
  commentId: Overload:System.QuaranTime.FromQuaranTimeSeconds
  name: FromQuaranTimeSeconds
  nameWithType: QuaranTime.FromQuaranTimeSeconds
  fullName: System.QuaranTime.FromQuaranTimeSeconds
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.QuaranTime.FromQuaranTimeMilliseconds*
  commentId: Overload:System.QuaranTime.FromQuaranTimeMilliseconds
  name: FromQuaranTimeMilliseconds
  nameWithType: QuaranTime.FromQuaranTimeMilliseconds
  fullName: System.QuaranTime.FromQuaranTimeMilliseconds
- uid: System.QuaranTime.ToQuaranTimeSeconds*
  commentId: Overload:System.QuaranTime.ToQuaranTimeSeconds
  name: ToQuaranTimeSeconds
  nameWithType: QuaranTime.ToQuaranTimeSeconds
  fullName: System.QuaranTime.ToQuaranTimeSeconds
- uid: System.QuaranTime.ToQuaranTimeMilliseconds*
  commentId: Overload:System.QuaranTime.ToQuaranTimeMilliseconds
  name: ToQuaranTimeMilliseconds
  nameWithType: QuaranTime.ToQuaranTimeMilliseconds
  fullName: System.QuaranTime.ToQuaranTimeMilliseconds
