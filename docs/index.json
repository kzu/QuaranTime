{
  "api/index.html": {
    "href": "api/index.html",
    "title": "QuaranTime | QuaranTime",
    "keywords": "QuaranTime Browse or search API docs from the left pane."
  },
  "api/System.html": {
    "href": "api/System.html",
    "title": "Namespace System | QuaranTime",
    "keywords": "Namespace System Classes QuaranTime Provides the Epoch constant that signaled the start of the Quarantime time and methods to convert to and from Quarantine-relative values."
  },
  "api/System.QuaranTime.html": {
    "href": "api/System.QuaranTime.html",
    "title": "Class QuaranTime | QuaranTime",
    "keywords": "Class QuaranTime Provides the Epoch constant that signaled the start of the Quarantime time and methods to convert to and from Quarantine-relative values. Inheritance System.Object QuaranTime Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : System Assembly : QuaranTime.dll Syntax public static class QuaranTime Properties | Improve this Doc View Source Epoch The value of this constant is equivalent to 00:00:00 GMT-0300, March 3, 2020, in the Gregorian calendar. Epoch defines the point in time when the quarantine started in Argentina. Declaration public static DateTimeOffset Epoch { get; } Property Value Type Description System.DateTimeOffset Methods | Improve this Doc View Source FromQuaranTimeMilliseconds(Int64) Converts a Quarantine time expressed as the number of milliseconds that have elapsed since 2020-03-20T00:00:00-03:00 to a System.DateTimeOffset value. Declaration public static DateTimeOffset FromQuaranTimeMilliseconds(long milliseconds) Parameters Type Name Description System.Int64 milliseconds A Quarantine time, expressed as the number of milliseconds that have elapsed since 2020-03-20T00:00:00-03:00 (March 3, 2020, at 12:00 AM GMT-0300). For Quarantine times before this date, its value is negative. Returns Type Description System.DateTimeOffset A date and time value that represents the same moment in time as the Quarantine time. Remarks The System.DateTimeOffset.Offset property value of the returned System.DateTimeOffset instance is System.TimeSpan.Zero , which represents Coordinated Universal Time. You can convert it to the time in a specific time zone by calling the System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo) . Exceptions Type Condition System.ArgumentOutOfRangeException milliseconds seconds is less than -63,720,270,000,000 or greater than 251,817,627,599,999. | Improve this Doc View Source FromQuaranTimeSeconds(Int64) Converts a Quarantine time expressed as the number of seconds that have elapsed since since 2020-03-20T00:00:00-03:00 to a System.DateTimeOffset value. Declaration public static DateTimeOffset FromQuaranTimeSeconds(long seconds) Parameters Type Name Description System.Int64 seconds A Quarantine time, expressed as the number of seconds that have elapsed since 2020-03-20T00:00:00-03:00 (March 3, 2020, at 12:00 AM GMT-0300). For Quarantine times before this date, its value is negative. Returns Type Description System.DateTimeOffset A date and time value that represents the same moment in time as the Quarantine time. Remarks The System.DateTimeOffset.Offset property value of the returned System.DateTimeOffset instance is System.TimeSpan.Zero , which represents Coordinated Universal Time. You can convert it to the time in a specific time zone by calling the System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo) . Exceptions Type Condition System.ArgumentOutOfRangeException seconds seconds is less than -63,720,270,000 or greater than 251,817,627,599. | Improve this Doc View Source ToQuaranTimeMilliseconds(DateTimeOffset) Returns the number of milliseconds that have elapsed since 2020-03-20T00:00:00-03:00. Declaration public static long ToQuaranTimeMilliseconds(this DateTimeOffset dateTime) Parameters Type Name Description System.DateTimeOffset dateTime Returns Type Description System.Int64 The number of miliseconds that have elapsed since 2020-03-20T00:00:00-03:00. Remarks Quarantine time represents the number of seconds that have elapsed since 2020-03-20T00:00:00-03:00 (March 3, 2020, at 12:00 AM GMT-0300). It does not take leap seconds into account. This method returns the number of milliseconds in Quarantine time. This method first converts the current instance to UTC before returning the number of milliseconds in its Quarantine time. For date and time values before 2020-03-20T00:00:00-03:00, this method returns a negative value. | Improve this Doc View Source ToQuaranTimeSeconds(DateTimeOffset) Returns the number of seconds that have elapsed since 2020-03-20T00:00:00-03:00. Declaration public static long ToQuaranTimeSeconds(this DateTimeOffset dateTime) Parameters Type Name Description System.DateTimeOffset dateTime Returns Type Description System.Int64 The number of seconds that have elapsed since 2020-03-20T00:00:00-03:00. Remarks Quarantine time represents the number of seconds that have elapsed since 2020-03-20T00:00:00-03:00 (March 3, 2020, at 12:00 AM GMT-0300). It does not take leap seconds into account. This method returns the number of seconds in Quarantine time. This method first converts the current instance to UTC before returning its Quarantine time. For date and time values before 2020-03-20T00:00:00-03:00, this method returns a negative value."
  },
  "index.html": {
    "href": "index.html",
    "title": "QuaranTime | QuaranTime",
    "keywords": "QuaranTime Just like Unix time is a system for describing a point in time relative to the Unix epoch, QuaranTime (from quarantine time ) is also a way to represent time relative to the beginning of a specific quarantine lockdown . Why The Unix epoch, being 1 January 1970, happened a \"long\" time ago and therefore seconds (and even moreso milliseconds) from it are already fairly large numbers (currently, 10 and 13 digits respectively). By comparison, in Quarantine epoch they are 3 digits shorter currently. But moreover, since the COVID-19 epoch will likely be remembered far more vividly by current and future generations, it seems like a great opportunity to adopt a more easily relatable epoch. The chosen date for the QuaranTime epoch is 3 March 2020 (2020-03-20) GMT-0300 for a couple reasons: It's very easy to remember (20/03/20) I'm from Argentina ¯_(ツ)_/¯ How Install the package : Install-Package QuaranTime Use the provided extension methods: long seconds = DateTimeOffset.Now.ToQuaranTimeSeconds(); long milliseconds = DateTimeOffset.Now.ToQuaranTimeMilliseconds(); And to get the DateTimeOffset : DateTimeOffset fromSecs = QuaranTime.ToQuaranTimeSeconds(seconds); DateTimeOffset fromMilliSecs = QuaranTime.FromQuaranTimeMilliseconds(milliseconds); You can also directly access the constant QuaranTime.Epoch value."
  }
}